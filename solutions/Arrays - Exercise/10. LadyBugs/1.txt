using System;
using System.Linq;
using System.Reflection;
using System.Security.Cryptography.X509Certificates;

namespace _10._LadyBugs
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine()); // field size
            int [] field = new int[n];  
            int [] indexLBInitial = Console.ReadLine()
                .Split(" ")
                .Select(int.Parse)  
                .ToArray();

            foreach (int index in indexLBInitial)
            {
                if (index >= 0 && index < field.Length )
                {
                    field[index] = 1;
                }
            }

            string comand;
            while ((comand = Console.ReadLine()) != "end")
            {
                string[] comandArgs = comand
                    .Split(" ",StringSplitOptions.RemoveEmptyEntries);
                int ladybugIndex = int.Parse(comandArgs[0]);  
                string direction = comandArgs[1];   
                int flyLength = int.Parse(comandArgs[2]);

                if (ladybugIndex < 0 || ladybugIndex >= field.Length)
                {
                    continue;
                }
                if (field[ladybugIndex]==0)
                {
                    continue;
                }

                field[ladybugIndex] = 0;

                if (direction == "left")
                {
                    flyLength *= -1;
                }
                int nextIndex = ladybugIndex + flyLength;

                while (nextIndex >= 0 && nextIndex < field.Length && field[nextIndex] ==1 )
                {
                    nextIndex += flyLength;

                }
                if (nextIndex <0 || nextIndex >= field.Length )
                {
                    continue;
                }

                field[nextIndex] = 1;
            }
            Console.WriteLine(String.Join(" ", field));






        }
    }
}